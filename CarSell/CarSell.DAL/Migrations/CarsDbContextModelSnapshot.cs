// <auto-generated />
using System;
using CarSell.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarSell.DAL.Migrations
{
    [DbContext(typeof(CarsDbContext))]
    partial class CarsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarSell.DAL.DBO.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("YearOfRelease")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarName = "Tayota Land Crusier Prado",
                            Image = "https://kluz-photos.kcdn.online/webp/27/27ea59a8-982f-4951-9598-de7b0dd2c86c/1-160x120.jpg",
                            ManufacturerId = 1,
                            Price = 24000.0,
                            Region = "Tashkent",
                            YearOfRelease = 2007
                        },
                        new
                        {
                            Id = 2,
                            CarName = "Lacetti, 3rd position",
                            Image = "https://kluz-photos.kcdn.online/webp/90/9097f693-c587-49da-8baf-2d0c0b10af0c/1-160x120.jpg",
                            ManufacturerId = 2,
                            Price = 11000.0,
                            Region = "Tashkent",
                            YearOfRelease = 2018
                        });
                });

            modelBuilder.Entity("CarSell.DAL.DBO.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tayota"
                        },
                        new
                        {
                            Id = 2,
                            Name = "UzAM"
                        });
                });

            modelBuilder.Entity("CarSell.DAL.DBO.Car", b =>
                {
                    b.HasOne("CarSell.DAL.DBO.Manufacturer", "Manufacturer")
                        .WithMany("Cars")
                        .HasForeignKey("ManufacturerId");
                });
#pragma warning restore 612, 618
        }
    }
}
